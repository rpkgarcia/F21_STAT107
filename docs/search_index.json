[["base-r-plotting.html", "Chapter 6 Base R Plotting 6.1 Histograms 6.2 Visualizing Qualitative Data", " Chapter 6 Base R Plotting 6.1 Histograms Let use some of the methods above, and others, to analyze a real data set. The Behavioral Risk Factor Surveillance System (BRFSS) is an annual telephone survey of 350,000 people in the United States. As its name implies, the BRFSS is designed to identify risk factors in the adult population and report emerging health trends. For example, respondents are asked about their diet and weekly physical activity, their HIV/AIDS status, possible tobacco use, and even their level of healthcare coverage. The BRFSS Web site (http://www.cdc.gov/brfss) contains a complete description of the survey, including the research questions that motivate the study and many interesting results derived from the data. We will focus on a random sample of 20,000 people from the BRFSS survey conducted in the year 2000. While there are over 200 variables in this data set, we will work with a smaller subset. We begin by loading the data set of 20,000 observations into the R workspace and examine some of its attributes. source(&quot;http://www.openintro.org/stat/data/cdc.R&quot;) After a brief time, a new data frame cdc appears in the workspace. Each row representing a case (a person surveyed) and each column representing a variable. To get general information on each variable, use the summary() function. summary(cdc) ## genhlth exerany hlthplan smoke100 ## excellent:4657 Min. :0.0000 Min. :0.0000 Min. :0.0000 ## very good:6972 1st Qu.:0.0000 1st Qu.:1.0000 1st Qu.:0.0000 ## good :5675 Median :1.0000 Median :1.0000 Median :0.0000 ## fair :2019 Mean :0.7457 Mean :0.8738 Mean :0.4721 ## poor : 677 3rd Qu.:1.0000 3rd Qu.:1.0000 3rd Qu.:1.0000 ## Max. :1.0000 Max. :1.0000 Max. :1.0000 ## height weight wtdesire age gender ## Min. :48.00 Min. : 68.0 Min. : 68.0 Min. :18.00 m: 9569 ## 1st Qu.:64.00 1st Qu.:140.0 1st Qu.:130.0 1st Qu.:31.00 f:10431 ## Median :67.00 Median :165.0 Median :150.0 Median :43.00 ## Mean :67.18 Mean :169.7 Mean :155.1 Mean :45.07 ## 3rd Qu.:70.00 3rd Qu.:190.0 3rd Qu.:175.0 3rd Qu.:57.00 ## Max. :93.00 Max. :500.0 Max. :680.0 Max. :99.00 The variables genhlth and gender are character variables. The summary() command reports the frequencies of the unique values. The variables exerany, hlthplan, and smoke100 are yes/no variables coded as 1=yes or 0=no. They represent the existence or absence or regular exercise, the presence of a healthcare plan, and whether or not the person smoked 100 cigarettes in their lifetime. The means are the proportion of “yes” responses. The variables height, weight, wtdesire, and age are numeric variables. The summary() command gives information on the means, medians, quartiles and range of values. Since this is a very large data set, we wouldn’t want to list all the data. We can use the functions head() and tail() to list the first and last few rows. head(cdc) ## genhlth exerany hlthplan smoke100 height weight wtdesire age gender ## 1 good 0 1 0 70 175 175 77 m ## 2 good 0 1 1 64 125 115 33 f ## 3 good 1 1 1 60 105 105 49 f ## 4 good 1 1 0 66 132 124 42 f ## 5 very good 0 1 0 61 150 130 55 f ## 6 very good 1 1 0 64 114 114 55 f tail(cdc) ## genhlth exerany hlthplan smoke100 height weight wtdesire age gender ## 19995 good 0 1 1 69 224 224 73 m ## 19996 good 1 1 0 66 215 140 23 f ## 19997 excellent 0 1 0 73 200 185 35 m ## 19998 poor 0 1 0 65 216 150 57 f ## 19999 good 1 1 0 67 165 165 81 f ## 20000 good 1 1 1 69 170 165 83 m We can look at graphical representations of this data. hist(cdc$height) hist(cdc$weight) hist(cdc$age) ## Histograms The output appears in the Plots panel of RStudio. You can use the arrows to the left of the Zoom button the switch among the three plots. hist(cdc$weight, breaks=20, main=&quot;Distribution of Weight&quot;,xlab=&quot;Weight (kg)&quot;) We specified that we want 20 cells for the histogram, added a main title, and title for the x-axis. Use col argument to change the colors used for the bars. By using the border argument, you can even change the color used for the border of the bars. hist(cdc$weight, breaks=20, main=&quot;Distribution of Weight&quot;, xlab=&quot;Weight (kg)&quot;, border = &quot;mediumpurple4&quot;, col = &quot;mediumpurple1&quot;) There are several ways we can add colors to R. Using Color Names: R programming has names for 657 colors. You can take a look at them all with the colors() function, or simply check this R color pdf. Using Hex Values as Colors: Instead of using a color name, color can also be defined with a hexadecimal value. We define a color as a 6 hexadecimal digit number of the form #RRGGBB. Where the RR is for red, GG for green and BB for blue and value ranges from 00 to FF. For example, #FF0000 would be red and #00FF00 would be green similarly, #FFFFFF would be white and #000000 would be black. Using RGB Values The function rgb() allows us to specify red, green and blue component with a number between 0 and 1. This function returns the corresponding hex code discussed above. Using a Color Palette: R programming offers 5 built in color palettes which can be used to quickly generate color vectors of desired length. They are: rainbow(), heat.colors(), terrain.colors(), topo.colors() and cm.colors(). We pass in the number of colors that we want Often you want to draw attention to specific values or observations in your graphic to provide unique insight. You can do this by adding markers to your graphic. For example, adding mean line will give you an idea about how much of the distribution is above and below the average. You can add such marker by using the abline() function. hist(cdc$weight, breaks=20, main=&quot;Distribution of Weight&quot;, xlab=&quot;Weight (kg)&quot;, border = &quot;mediumpurple4&quot;, col = &quot;mediumpurple1&quot;) abline(v=mean(cdc$weight), col=&quot;mediumblue&quot;, lty=2, lwd=2) You can also place values on top of bars; which will help you interpret the graph correctly. You can add them by setting the labels argument to TRUE. hist(cdc$height[1:1000], col=&quot;dodgerblue3&quot;, labels=TRUE, ylim = c(0, 200), breaks = 18) Often you want to compare the distributions of different variables within your data. You can overlay the histograms by setting the add argument of the second histogram to TRUE. # random numbers h1 = rnorm(1000,6) h2 = rnorm(1000,4) # Overlay two histograms hist(h1, col=rgb(1,0,0,0.25)) hist(h2, col=rgb(0,0,1,0.25), add=TRUE) For more options, look up “hist” in the Help panel of RStudio. Let’s produce a boxplot for the first 1000 values of the height variable. boxplot(cdc$height[1:1000]) The line in the center is the median. The bottom and top of the box are drawn at the first (\\(Q_1\\)) and third (\\(Q_3\\)) quartiles (same as the 25th and 75th percentiles). The difference between the third and first quartiles is called the interquartile range (\\(Q_3-Q_1\\)). This is the height of the box. The lines above and below the box are called the whiskers. The upper whisker is either the third quartile plus 1.5 times the interquartile range, \\(Q3 +1.5(Q_3-Q_1)\\), or the largest data value, whichever is smallest. Similarly, the lower whisker is either the first quartile minus 1.5 times the interquartile range, \\(Q1-1.5(Q_3-Q_1)\\), or the smallest data value, whichever is largest. If data values exceed the whiskers, they are plotted as circles. Boxplots are often used to represent numeric data. One can use boxplots to compare different groups. boxplot(cdc$height[1:1000] ~ cdc$gender[1:1000]) 6.2 Visualizing Qualitative Data We will now look at some of the qualitative data that are not numbers, but categories or groups. The table() function can be used to tabulate categorical data. The genhlth variable has five categories, we can use table() to find the frequencies. table(cdc$genhlth) ## ## excellent very good good fair poor ## 4657 6972 5675 2019 677 Since the sample size is 20,000, we can divide by n to get proportions. table(cdc$genhlth)/20000 ## ## excellent very good good fair poor ## 0.23285 0.34860 0.28375 0.10095 0.03385 Pie charts are also used for categorical data. Options are also available for the pie() function. pie(table(cdc$genhlth)/20000) Options are also available for the pie() function. colors = c(&quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;, &quot;pink&quot;, &quot;red&quot;) pie(table(cdc$genhlth)/20000, col = colors, main = &quot;General Health&quot;) The table() function can also be used to cross-tabulate categorical data. Let’s create a frequency table of smokers and non-smokers for both genders. table(cdc$smoke100, cdc$gender) ## ## m f ## 0 4547 6012 ## 1 5022 4419 The zero is for nonsmokers and the one is for smokers. We can also create a frequency table of general health classifications for both genders. table(cdc$genhlth, cdc$gender) ## ## m f ## excellent 2298 2359 ## very good 3382 3590 ## good 2722 2953 ## fair 884 1135 ## poor 283 394 "]]
